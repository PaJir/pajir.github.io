{"version":3,"sources":["Service.js","component/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["API_URL","service","data","url","axios","get","headers","params","responseType","then","response","Search","Input","TextArea","Main","props","state","predictions","inputRef","React","createRef","onSubmit","bind","onPredict","feedback","notification","open","message","description","value","this","current","input","length","text","slice","console","log","predict","e","catch","warn","placement","className","id","ref","placeholder","onChange","onSearch","style","width","rows","size","onClick","Component","withRouter","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2WACMA,EAAU,0BCIVC,EAAU,I,yIDDEC,G,8EACJC,E,UAASH,E,uBACRI,IACFC,IAAIF,EAAK,CACNG,QAAS,CACL,8BAA+B,KAGnCC,OAAQL,EACRM,aAAc,SAEjBC,MAAK,SAACC,GAAD,OAAcA,EAASR,S,0KAGtBA,G,8EACLC,E,UAASH,E,uBACRI,IACFC,IAAIF,EAAK,CACNG,QAAS,CACL,8BAA+B,KAEnCC,OAAQL,EACRM,aAAc,SAEjBC,MAAK,SAACC,GAAD,OAAcA,EAASR,S,0GCrBjCS,EAAqBC,IAArBD,OAAQE,EAAaD,IAAbC,SAEVC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,YAAa,IAEjB,EAAKC,SAAWC,IAAMC,YACtB,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKE,SAAW,EAAKA,SAASF,KAAd,gBARD,E,uDAYfG,IAAaC,KAAK,CACdC,QAAS,uCACTC,YAAa,mE,kCAKjB,IAAMC,EAAQC,KAAKZ,SAASa,QAAQC,MAAMH,MAC1C,KAAIA,EAAMI,OAAS,GAAnB,CAGA,IAAMC,EAAOL,EAAMM,OAAO,GAC1BC,QAAQC,IAAIH,GACZjC,EACKqC,QAAQJ,GACRzB,MAAK,SAAC8B,GACHH,QAAQC,IAAIE,MAEfC,OAAM,SAACD,GACJH,QAAQK,KAAKF,S,iCAMrBtC,EACKuB,SAAS,CAAEtB,KAAM,+CACjBO,MAAK,SAAC8B,GACHH,QAAQC,IAAIE,GACZd,IAAaC,KAAK,CACdC,QAAS,+DACTe,UAAW,mBAGlBF,OAAM,SAACD,GACJd,IAAaC,KAAK,CACdC,QAAS,yDACTe,UAAW,gBAEfN,QAAQK,KAAKF,Q,+BAKrB,OACI,yBAAKI,UAAU,YACX,kBAAChC,EAAD,CACIiC,GAAG,WACHC,IAAKf,KAAKZ,SACV4B,YAAY,iCACZC,SAAUjB,KAAKP,UACfyB,SAAUlB,KAAKT,SACf4B,MAAO,CAAEC,MAAO,OAEpB,6BACA,6BACA,6BACA,6BACA,kBAACrC,EAAD,CACIiC,YAAY,iCACZK,KAAM,EACNC,KAAK,QACLH,MAAO,CAAEC,MAAO,OAEpB,kBAAC,IAAD,CAAQG,QAASvB,KAAKN,SAAUyB,MAAO,CAAEC,MAAO,MAC3C,a,GA9EFI,aAqFJC,cAAWzC,GC7EX0C,E,uKAXP,OACI,kBAAC,IAAD,KACI,oCACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW7C,IACjC,kBAAC,IAAD,CAAO2C,KAAK,UAAUC,OAAK,EAACC,UAAW7C,U,GANzCwC,aCQHM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrD,MAAK,YAAkD,IAA/CsD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.836cfb92.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst API_URL = \"http://8.135.48.48:3000\";\r\n\r\nexport default class Service {\r\n    async predict(data) {\r\n        const url = `${API_URL}/`;\r\n        return axios\r\n            .get(url, {\r\n                headers: {\r\n                    \"Access-Control-Allow-Origin\": \"*\"\r\n                },\r\n\r\n                params: data,\r\n                responseType: \"json\"\r\n            })\r\n            .then((response) => response.data);\r\n    }\r\n\r\n    async feedback(data) {\r\n        const url = `${API_URL}/`;\r\n        return axios\r\n            .get(url, {\r\n                headers: {\r\n                    \"Access-Control-Allow-Origin\": \"*\"\r\n                },\r\n                params: data,\r\n                responseType: \"json\"\r\n            })\r\n            .then((response) => response.data);\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Input, Button, notification } from \"antd\";\r\nimport Service from \"../Service\";\r\n\r\nconst service = new Service();\r\n\r\nconst { Search, TextArea } = Input;\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            predictions: []\r\n        };\r\n        this.inputRef = React.createRef();\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onPredict = this.onPredict.bind(this);\r\n        this.feedback = this.feedback.bind(this);\r\n    }\r\n\r\n    onSubmit() {\r\n        notification.open({\r\n            message: \"这个还没做呢\",\r\n            description: \"而且可能也不会做这个\"\r\n        });\r\n    }\r\n\r\n    onPredict() {\r\n        const value = this.inputRef.current.input.value;\r\n        if (value.length < 2) {\r\n            return;\r\n        }\r\n        const text = value.slice(-2);\r\n        console.log(text);\r\n        service\r\n            .predict(text)\r\n            .then((e) => {\r\n                console.log(e);\r\n            })\r\n            .catch((e) => {\r\n                console.warn(e);\r\n                // console.warn(\"can't require data\");\r\n            });\r\n    }\r\n\r\n    feedback() {\r\n        service\r\n            .feedback({ data: \"123---------------------------------------\" })\r\n            .then((e) => {\r\n                console.log(e);\r\n                notification.open({\r\n                    message: \"收到反馈了，感谢支持\",\r\n                    placement: \"bottomRight\"\r\n                });\r\n            })\r\n            .catch((e) => {\r\n                notification.open({\r\n                    message: \"没成功，再试一次吧\",\r\n                    placement: \"bottomRight\"\r\n                });\r\n                console.warn(e);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app-main\">\r\n                <Search\r\n                    id=\"search81\"\r\n                    ref={this.inputRef}\r\n                    placeholder=\"输入什么呢\"\r\n                    onChange={this.onPredict}\r\n                    onSearch={this.onSubmit}\r\n                    style={{ width: 400 }}\r\n                />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <TextArea\r\n                    placeholder=\"说点什么吧\"\r\n                    rows={4}\r\n                    size=\"large\"\r\n                    style={{ width: 400 }}\r\n                />\r\n                <Button onClick={this.feedback} style={{ width: 400 }}>\r\n                    {\"biu~\"}\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Main);\r\n","import React, { Component } from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Main from \"./component/Main\";\nclass App extends Component {\n    render() {\n        return (\n            <HashRouter>\n                <>\n                    <Route path=\"/\" exact component={Main} />\n                    <Route path=\"/about/\" exact component={Main} />\n                </>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}